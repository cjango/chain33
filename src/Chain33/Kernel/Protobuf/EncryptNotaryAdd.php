<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage.proto

namespace Jason\Chain33\Kernel\Protobuf;

use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;

/**
 * 加密存证数据运算.
 * Generated from protobuf message <code>Jason.Chain33.Kernel.Protobuf.EncryptNotaryAdd</code>
 */
class EncryptNotaryAdd extends Message
{
    /**
     *源操作数存证索引.
     * Generated from protobuf field <code>string key = 1;</code>
     */
    protected $key = '';

    /**
     *待操作数据.
     * Generated from protobuf field <code>bytes encryptAdd = 2;</code>
     */
    protected $encryptAdd = '';

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     * @var string $key
     *                       源操作数存证索引
     * @var string $encryptAdd
     *                       待操作数据
     *                       }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\Storage::initOnce();
        parent::__construct($data);
    }

    /**
     *源操作数存证索引.
     * Generated from protobuf field <code>string key = 1;</code>
     *
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     *源操作数存证索引.
     * Generated from protobuf field <code>string key = 1;</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, true);
        $this->key = $var;

        return $this;
    }

    /**
     *待操作数据.
     * Generated from protobuf field <code>bytes encryptAdd = 2;</code>
     *
     * @return string
     */
    public function getEncryptAdd()
    {
        return $this->encryptAdd;
    }

    /**
     *待操作数据.
     * Generated from protobuf field <code>bytes encryptAdd = 2;</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setEncryptAdd($var)
    {
        GPBUtil::checkString($var, false);
        $this->encryptAdd = $var;

        return $this;
    }
}
